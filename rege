html:

<!DOCTYPE html>
<html>

<head>
    <title>Listagem de Pessoas</title>
    <link rel="stylesheet" type="text/css" href="css/estilos.css">
</head>

<body>
    <h1>Cadastro de Pessoas</h1>
    <button id="btn_listar_pessoas">Listar</button>
    <button id="btn_form_incluir_pessoa">Incluir</button>
    <hr>

    <!-- form de inclusão a seguir: inicialmente oculto-->
    <div id=html_form_incluir_pessoa>
        <fieldset>
            <legend>Nova pessoa</legend>
            <div>
                <label for="nome">Nome:</label> <input type=text id=nome value="Joao">
            </div>
            <div>
                <label for="endereco">Endereço:</label> <textarea id=endereco>Rua 12</textarea>
            </div>
            <div>
                <label for="telefone">Telefone:</label> <input type=text id=telefone value="2323">
            </div>
            <div>
                <label for="endereco">Email:</label> <textarea id=email>joao@gmail.com</textarea>
            </div>
            <div id="div_btn_incluir_pessoa">
                <button id="btn_incluir_pessoa">Incluir</button>
                <img id=success src=img/success.gif />
                <img id=error src=img/error.gif />
            </div>
        </fieldset>
    </div>

    <div id="tabela_pessoas" class="rTable">
        <!-- inserir as pessoas aqui -->
    </div>

</body>

<script src="js/jquery-3.4.1.min.js"></script>
<script src="js/meuscript.js"></script>

</html>

--------------------------------

servidor:

from flask import Flask, json, jsonify
from flask import request
from modelo import Pessoa
from playhouse.shortcuts import model_to_dict

# inicializa o servidor
app = Flask(__name__)

@app.route('/', methods=['GET'])
def inicio():
    return "backend do sistema de pessoas; <a href=/listar_pessoas>API listar pessoas</a>"

@app.route('/listar_pessoas')
def listar():
    # converte para pessoa para inserir em uma lista json
    pessoas = list(map(model_to_dict, Pessoa.select()))
    # adiciona à lista json um nome
    response = jsonify({"lista": pessoas})
    # informa que outras origens podem acessar os dados desde servidor/serviço
    response.headers.add('Access-Control-Allow-Origin', '*')
    # retorno!
    return response

# curl -d '{"nome":"joao"}' -X POST http://localhost:4999/incluir_pessoa
@app.route('/incluir_pessoa', methods=['post'])
def incluir_pessoa():
    # prepara a resposta padrão otimista
    response = jsonify({"message": "ok","details":"ok"})
    try:
        # pega os dados informados
        dados = request.get_json(force=True)
        # cria uma pessoa
        Pessoa.create(nome = dados['nome'], 
            endereco = dados['endereco'], 
            telefone = dados['telefone'],
            email = dados['email'])
    except Exception as e:
        # resposta de erro
        response = jsonify({"message": "error","details":str(e)})
        
    # informa que outras origens podem acessar os dados desde servidor/serviço
    response.headers.add('Access-Control-Allow-Origin', '*')
    # retorno!
    return response

app.run(debug=True, port=4999)

-------------------------------------------------

menu:

$("#btn_listar_pessoas").click(function() {
    $.ajax({
        url: 'http://localhost:4999/listar_pessoas',
        method: 'GET',
        dataType: 'json',
        success: function(resultado) {
            //alert(resultado);
            $('#tabela_pessoas').empty()
            pessoas = resultado.lista;
            var cabecalho = '<div class="rTableRow">' +
                '<div class="rTableHead">Nome</div>' +
                '<div class="rTableHead">Endereço</div>' +
                '<div class="rTableHead">Telefone</div>' +
                '<div class="rTableHead">Email</div>' +
                '</div>';
            $('#tabela_pessoas').append(cabecalho);
            for (var i in pessoas) { //i vale a posição no vetor
                $('#tabela_pessoas').append(ajustar_pessoa_em_linha_de_tabela(pessoas[i]));
            }
        },
        error: function(resultado) {
            alert("ocorreu algum erro na leitura dos dados: ", res);
        }
    });
});

$("#btn_form_incluir_pessoa").click(function() {
    $("#html_form_incluir_pessoa").css("display", "inline-block");
});

$("#btn_incluir_pessoa").click(function() {

    // obtém os dados
    var nome = $("#nome").val();
    var end = $("#endereco").val();
    var tel = $("#telefone").val();
    var ema = $("#email"). val();
    // prepara os dados em json
    var dados = JSON.stringify({ nome: nome, endereco: end, telefone: tel, email: ema })

    $.ajax({
        url: 'http://localhost:4999/incluir_pessoa',
        type: 'POST',
        dataType: 'json', // vou receber em json,
        data: dados, //JSON.stringify({ "message": "ok" }), // dados a enviar
        // contentType: "application/json",
        success: function(resultado) {
            //alert(resultado)
            //alert(resultado.message)
            //alert(resultado.details)
            var deu_certo = resultado.message == "ok"
            mostrar_resultado_acao(deu_certo)
        },
        error: function(resultado) {
            alert("ocorreu algum erro na leitura dos dados: ", resultado);
        }
    });

});

function mostrar_resultado_acao(sucesso) {
    if (sucesso) {
        $("#success").fadeIn(1000);
    } else {
        $("#error").fadeIn(1000);
    }
}

function ajustar_pessoa_em_linha_de_tabela(obj_pessoa) {

    var resp = '<div class="rTableRow">' +
        '<div class="rTableCell">' + obj_pessoa.nome + '</div>' +
        '<div class="rTableCell">' + obj_pessoa.endereco + '</div>' +
        '<div class="rTableCell">' + obj_pessoa.telefone + '</div>' +
        '<div class="rTableCell">' + obj_pessoa.email+ '</div>' +
        '</div>';
    return resp;
}

-------------------------------

modelo:

from peewee import *
import os

arq = './pessoas-backend.db'
db = SqliteDatabase(arq)

class BaseModel(Model):
    class Meta:
        database = db

class Pessoa(BaseModel):
    nome = CharField()
    email = CharField()
    endereco = CharField()
    telefone = CharField()
    
if __name__ == "__main__":
    # apagar o arquivo caso ele exista
    if os.path.exists(arq):
        os.remove(arq)

    db.connect() # conecta-se ao banco de dados
    db.create_tables([Pessoa]) # cria a tabela de pessoas
    joao = Pessoa.create(nome="Joao da Silva", email = 'joao@gmail.com', # cria uma pessoa
        endereco="Casa 9", telefone="3541-1230")
    maria = Pessoa.create(nome = "Maria de Oliveira", email = "maria@gmail.com", # cria outra pessoa
        endereco = "Beco das Flores, S/N", telefone="não possui")
    print(joao.nome, ",", joao.endereco, ",", joao.telefone, ",", joao.email) # exibe os dados de joao
    
    -------------------------------
